// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file api/v1/routines.proto (package api.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { FieldMask, Message, proto3 } from "@bufbuild/protobuf";
import { Exercise } from "./exercise_pb";

/**
 * @generated from message api.v1.CreateRoutineRequest
 */
export class CreateRoutineRequest extends Message<CreateRoutineRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: repeated string exercise_ids = 2;
   */
  exerciseIds: string[] = [];

  constructor(data?: PartialMessage<CreateRoutineRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.v1.CreateRoutineRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "exercise_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateRoutineRequest {
    return new CreateRoutineRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateRoutineRequest {
    return new CreateRoutineRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateRoutineRequest {
    return new CreateRoutineRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateRoutineRequest | PlainMessage<CreateRoutineRequest> | undefined, b: CreateRoutineRequest | PlainMessage<CreateRoutineRequest> | undefined): boolean {
    return proto3.util.equals(CreateRoutineRequest, a, b);
  }
}

/**
 * @generated from message api.v1.CreateRoutineResponse
 */
export class CreateRoutineResponse extends Message<CreateRoutineResponse> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<CreateRoutineResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.v1.CreateRoutineResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateRoutineResponse {
    return new CreateRoutineResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateRoutineResponse {
    return new CreateRoutineResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateRoutineResponse {
    return new CreateRoutineResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateRoutineResponse | PlainMessage<CreateRoutineResponse> | undefined, b: CreateRoutineResponse | PlainMessage<CreateRoutineResponse> | undefined): boolean {
    return proto3.util.equals(CreateRoutineResponse, a, b);
  }
}

/**
 * @generated from message api.v1.GetRoutineRequest
 */
export class GetRoutineRequest extends Message<GetRoutineRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<GetRoutineRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.v1.GetRoutineRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetRoutineRequest {
    return new GetRoutineRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetRoutineRequest {
    return new GetRoutineRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetRoutineRequest {
    return new GetRoutineRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetRoutineRequest | PlainMessage<GetRoutineRequest> | undefined, b: GetRoutineRequest | PlainMessage<GetRoutineRequest> | undefined): boolean {
    return proto3.util.equals(GetRoutineRequest, a, b);
  }
}

/**
 * @generated from message api.v1.GetRoutineResponse
 */
export class GetRoutineResponse extends Message<GetRoutineResponse> {
  /**
   * @generated from field: api.v1.Routine routine = 1;
   */
  routine?: Routine;

  constructor(data?: PartialMessage<GetRoutineResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.v1.GetRoutineResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "routine", kind: "message", T: Routine },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetRoutineResponse {
    return new GetRoutineResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetRoutineResponse {
    return new GetRoutineResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetRoutineResponse {
    return new GetRoutineResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetRoutineResponse | PlainMessage<GetRoutineResponse> | undefined, b: GetRoutineResponse | PlainMessage<GetRoutineResponse> | undefined): boolean {
    return proto3.util.equals(GetRoutineResponse, a, b);
  }
}

/**
 * @generated from message api.v1.UpdateRoutineRequest
 */
export class UpdateRoutineRequest extends Message<UpdateRoutineRequest> {
  /**
   * @generated from field: api.v1.Routine routine = 1;
   */
  routine?: Routine;

  /**
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  constructor(data?: PartialMessage<UpdateRoutineRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.v1.UpdateRoutineRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "routine", kind: "message", T: Routine },
    { no: 2, name: "update_mask", kind: "message", T: FieldMask },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateRoutineRequest {
    return new UpdateRoutineRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateRoutineRequest {
    return new UpdateRoutineRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateRoutineRequest {
    return new UpdateRoutineRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateRoutineRequest | PlainMessage<UpdateRoutineRequest> | undefined, b: UpdateRoutineRequest | PlainMessage<UpdateRoutineRequest> | undefined): boolean {
    return proto3.util.equals(UpdateRoutineRequest, a, b);
  }
}

/**
 * @generated from message api.v1.UpdateRoutineResponse
 */
export class UpdateRoutineResponse extends Message<UpdateRoutineResponse> {
  /**
   * @generated from field: api.v1.Routine routine = 1;
   */
  routine?: Routine;

  constructor(data?: PartialMessage<UpdateRoutineResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.v1.UpdateRoutineResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "routine", kind: "message", T: Routine },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateRoutineResponse {
    return new UpdateRoutineResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateRoutineResponse {
    return new UpdateRoutineResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateRoutineResponse {
    return new UpdateRoutineResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateRoutineResponse | PlainMessage<UpdateRoutineResponse> | undefined, b: UpdateRoutineResponse | PlainMessage<UpdateRoutineResponse> | undefined): boolean {
    return proto3.util.equals(UpdateRoutineResponse, a, b);
  }
}

/**
 * @generated from message api.v1.DeleteRoutineRequest
 */
export class DeleteRoutineRequest extends Message<DeleteRoutineRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<DeleteRoutineRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.v1.DeleteRoutineRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteRoutineRequest {
    return new DeleteRoutineRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteRoutineRequest {
    return new DeleteRoutineRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteRoutineRequest {
    return new DeleteRoutineRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteRoutineRequest | PlainMessage<DeleteRoutineRequest> | undefined, b: DeleteRoutineRequest | PlainMessage<DeleteRoutineRequest> | undefined): boolean {
    return proto3.util.equals(DeleteRoutineRequest, a, b);
  }
}

/**
 * @generated from message api.v1.DeleteRoutineResponse
 */
export class DeleteRoutineResponse extends Message<DeleteRoutineResponse> {
  constructor(data?: PartialMessage<DeleteRoutineResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.v1.DeleteRoutineResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteRoutineResponse {
    return new DeleteRoutineResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteRoutineResponse {
    return new DeleteRoutineResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteRoutineResponse {
    return new DeleteRoutineResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteRoutineResponse | PlainMessage<DeleteRoutineResponse> | undefined, b: DeleteRoutineResponse | PlainMessage<DeleteRoutineResponse> | undefined): boolean {
    return proto3.util.equals(DeleteRoutineResponse, a, b);
  }
}

/**
 * @generated from message api.v1.ListRoutinesRequest
 */
export class ListRoutinesRequest extends Message<ListRoutinesRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: int32 page_limit = 2;
   */
  pageLimit = 0;

  /**
   * @generated from field: bytes page_token = 3;
   */
  pageToken = new Uint8Array(0);

  constructor(data?: PartialMessage<ListRoutinesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.v1.ListRoutinesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "page_limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "page_token", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListRoutinesRequest {
    return new ListRoutinesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListRoutinesRequest {
    return new ListRoutinesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListRoutinesRequest {
    return new ListRoutinesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListRoutinesRequest | PlainMessage<ListRoutinesRequest> | undefined, b: ListRoutinesRequest | PlainMessage<ListRoutinesRequest> | undefined): boolean {
    return proto3.util.equals(ListRoutinesRequest, a, b);
  }
}

/**
 * @generated from message api.v1.ListRoutinesResponse
 */
export class ListRoutinesResponse extends Message<ListRoutinesResponse> {
  /**
   * @generated from field: repeated api.v1.Routine routines = 1;
   */
  routines: Routine[] = [];

  /**
   * @generated from field: bytes next_page_token = 2;
   */
  nextPageToken = new Uint8Array(0);

  constructor(data?: PartialMessage<ListRoutinesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.v1.ListRoutinesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "routines", kind: "message", T: Routine, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListRoutinesResponse {
    return new ListRoutinesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListRoutinesResponse {
    return new ListRoutinesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListRoutinesResponse {
    return new ListRoutinesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListRoutinesResponse | PlainMessage<ListRoutinesResponse> | undefined, b: ListRoutinesResponse | PlainMessage<ListRoutinesResponse> | undefined): boolean {
    return proto3.util.equals(ListRoutinesResponse, a, b);
  }
}

/**
 * @generated from message api.v1.AddExerciseRequest
 */
export class AddExerciseRequest extends Message<AddExerciseRequest> {
  /**
   * @generated from field: string routine_id = 1;
   */
  routineId = "";

  /**
   * @generated from field: string exercise_id = 2;
   */
  exerciseId = "";

  constructor(data?: PartialMessage<AddExerciseRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.v1.AddExerciseRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "routine_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "exercise_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddExerciseRequest {
    return new AddExerciseRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddExerciseRequest {
    return new AddExerciseRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddExerciseRequest {
    return new AddExerciseRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddExerciseRequest | PlainMessage<AddExerciseRequest> | undefined, b: AddExerciseRequest | PlainMessage<AddExerciseRequest> | undefined): boolean {
    return proto3.util.equals(AddExerciseRequest, a, b);
  }
}

/**
 * @generated from message api.v1.AddExerciseResponse
 */
export class AddExerciseResponse extends Message<AddExerciseResponse> {
  constructor(data?: PartialMessage<AddExerciseResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.v1.AddExerciseResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddExerciseResponse {
    return new AddExerciseResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddExerciseResponse {
    return new AddExerciseResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddExerciseResponse {
    return new AddExerciseResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddExerciseResponse | PlainMessage<AddExerciseResponse> | undefined, b: AddExerciseResponse | PlainMessage<AddExerciseResponse> | undefined): boolean {
    return proto3.util.equals(AddExerciseResponse, a, b);
  }
}

/**
 * @generated from message api.v1.RemoveExerciseRequest
 */
export class RemoveExerciseRequest extends Message<RemoveExerciseRequest> {
  /**
   * @generated from field: string routine_id = 1;
   */
  routineId = "";

  /**
   * @generated from field: string exercise_id = 2;
   */
  exerciseId = "";

  constructor(data?: PartialMessage<RemoveExerciseRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.v1.RemoveExerciseRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "routine_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "exercise_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveExerciseRequest {
    return new RemoveExerciseRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveExerciseRequest {
    return new RemoveExerciseRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveExerciseRequest {
    return new RemoveExerciseRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveExerciseRequest | PlainMessage<RemoveExerciseRequest> | undefined, b: RemoveExerciseRequest | PlainMessage<RemoveExerciseRequest> | undefined): boolean {
    return proto3.util.equals(RemoveExerciseRequest, a, b);
  }
}

/**
 * @generated from message api.v1.RemoveExerciseResponse
 */
export class RemoveExerciseResponse extends Message<RemoveExerciseResponse> {
  constructor(data?: PartialMessage<RemoveExerciseResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.v1.RemoveExerciseResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveExerciseResponse {
    return new RemoveExerciseResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveExerciseResponse {
    return new RemoveExerciseResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveExerciseResponse {
    return new RemoveExerciseResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveExerciseResponse | PlainMessage<RemoveExerciseResponse> | undefined, b: RemoveExerciseResponse | PlainMessage<RemoveExerciseResponse> | undefined): boolean {
    return proto3.util.equals(RemoveExerciseResponse, a, b);
  }
}

/**
 * @generated from message api.v1.UpdateExerciseOrderRequest
 */
export class UpdateExerciseOrderRequest extends Message<UpdateExerciseOrderRequest> {
  /**
   * @generated from field: string routine_id = 1;
   */
  routineId = "";

  /**
   * @generated from field: repeated string exercise_ids = 2;
   */
  exerciseIds: string[] = [];

  constructor(data?: PartialMessage<UpdateExerciseOrderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.v1.UpdateExerciseOrderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "routine_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "exercise_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateExerciseOrderRequest {
    return new UpdateExerciseOrderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateExerciseOrderRequest {
    return new UpdateExerciseOrderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateExerciseOrderRequest {
    return new UpdateExerciseOrderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateExerciseOrderRequest | PlainMessage<UpdateExerciseOrderRequest> | undefined, b: UpdateExerciseOrderRequest | PlainMessage<UpdateExerciseOrderRequest> | undefined): boolean {
    return proto3.util.equals(UpdateExerciseOrderRequest, a, b);
  }
}

/**
 * @generated from message api.v1.UpdateExerciseOrderResponse
 */
export class UpdateExerciseOrderResponse extends Message<UpdateExerciseOrderResponse> {
  constructor(data?: PartialMessage<UpdateExerciseOrderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.v1.UpdateExerciseOrderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateExerciseOrderResponse {
    return new UpdateExerciseOrderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateExerciseOrderResponse {
    return new UpdateExerciseOrderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateExerciseOrderResponse {
    return new UpdateExerciseOrderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateExerciseOrderResponse | PlainMessage<UpdateExerciseOrderResponse> | undefined, b: UpdateExerciseOrderResponse | PlainMessage<UpdateExerciseOrderResponse> | undefined): boolean {
    return proto3.util.equals(UpdateExerciseOrderResponse, a, b);
  }
}

/**
 * @generated from message api.v1.Routine
 */
export class Routine extends Message<Routine> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: repeated api.v1.Exercise exercises = 3;
   */
  exercises: Exercise[] = [];

  constructor(data?: PartialMessage<Routine>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.v1.Routine";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "exercises", kind: "message", T: Exercise, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Routine {
    return new Routine().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Routine {
    return new Routine().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Routine {
    return new Routine().fromJsonString(jsonString, options);
  }

  static equals(a: Routine | PlainMessage<Routine> | undefined, b: Routine | PlainMessage<Routine> | undefined): boolean {
    return proto3.util.equals(Routine, a, b);
  }
}

