name: Deploy backend

inputs:
  aws_access_key_id:
    description: "AWS Access Key ID"
    required: true
  aws_secret_access_key:
    description: "AWS Secret Access Key"
    required: true
  aws_region:
    description: "AWS Region"
    required: true
  aws_ec2_private_key:
    description: "AWS EC2 Private Key"
    required: true
  aws_ec2_remote_host:
    description: "AWS EC2 Remote Host"
    required: true
  db_host:
    description: "Database Host"
    required: true
  db_port:
    description: "Database Port"
    required: true
  db_user:
    description: "Database User"
    required: true
  db_password:
    description: "Database Password"
    required: true
  db_name:
    description: "Database Name"
    required: true
  cors_allowed_origin:
    description: "CORS Allowed Origin"
    required: true
  server_port:
    description: "Server Port"
    required: true
  server_cert_path:
    description: "Server Cert Path"
    required: true
  server_key_path:
    description: "Server Key Path"
    required: true
  cookie_domain:
    description: "Cookie Domain"
    required: true
  jwt_access_token_key:
    description: "JWT Access Token Key"
    required: true
  jwt_refresh_token_key:
    description: "JWT Refresh Token"
    required: true

runs:
  using: 'composite'
  steps:
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: Build the app
      shell: bash
      working-directory: ./server
      run: |
        go mod download
        GOOS=linux go build -o bin/app cmd/main.go

    - name: Create env file
      working-directory: ./server/bin
      shell: bash
      run: |
        touch .env
        echo DB_HOST=${{ inputs.db_host }} >> .env
        echo DB_PORT=${{ inputs.db_port }} >> .env
        echo DB_USER=${{ inputs.db_user }} >> .env
        echo DB_PASSWORD=${{ inputs.db_password }} >> .env
        echo DB_NAME=${{ inputs.db_name }} >> .env
        echo CORS_ALLOWED_ORIGIN=${{ inputs.cors_allowed_origin }} >> .env
        echo SERVER_PORT=${{ inputs.server_port }} >> .env
        echo SERVER_CERT_PATH=${{ inputs.server_cert_path }} >> .env
        echo SERVER_KEY_PATH=${{ inputs.server_key_path }} >> .env
        echo COOKIE_DOMAIN=${{ inputs.cookie_domain }} >> .env
        echo JWT_ACCESS_TOKEN_KEY=${{ inputs.jwt_access_token_key }} >> .env
        echo JWT_REFRESH_TOKEN_KEY=${{ inputs.jwt_refresh_token_key }} >> .env

    - name: Deploy to EC2 instance
      uses: easingthemes/ssh-deploy@v5.1.0
      with:
        REMOTE_HOST: ${{ inputs.aws_ec2_remote_host }}
        REMOTE_USER: 'ec2-user'
        SSH_PRIVATE_KEY: ${{ inputs.aws_ec2_private_key }}
        SOURCE: 'server/bin/'

    - name: Restart app
      uses: appleboy/ssh-action@v1.1.0
      with:
        host: ${{ inputs.aws_ec2_remote_host }}
        username: 'ec2-user'
        key: ${{ inputs.aws_ec2_private_key }}
        port: 22
        script: |
          cd /home/ec2-user
          sudo systemctl restart app.service        
